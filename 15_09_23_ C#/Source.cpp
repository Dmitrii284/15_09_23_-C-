/*
* 
* C#
* JIT-компиляция (англ. Just-in-Time, компиляция «точно в нужное время»), динамическая компиляция (англ. dynamic translation) — технология увеличения
производительности программных систем, использующих байт-код, путём компиляции байт-кода в машинный код или в другой формат непосредственно во время работы программы.
Таким образом достигается высокая скорость выполнения по сравнению с интерпретируемым байт-кодом[1] (сравнимая с компилируемыми языками)
за счёт увеличения потребления памяти (для хранения результатов компиляции) 
и затрат времени на компиляцию. Технология JIT базируется на двух более ранних идеях, касающихся среды выполнения: компиляции байт-кода и динамической компиляции.

.........................Фор ичь  for each..........................
В C# оператор foreach используется для итерации по коллекциям, таким как массивы, списки, словари и т.д.

Вот пример использования оператора foreach:

string[] languages = { "C#", "Java", "JavaScript", "Python" };

foreach (string language in languages)
{
    Console.WriteLine(language);
}
В этом примере мы перебираем массив languages и выводим каждый элемент на консоль.

Ратификатор - разбирает код
ОпФускатор запутывает.

Платформа дот нет - Нужна для того чтобы можно было замускать много приложений в единой системе.

Дот Нетворк - Хорошо работает на Windovs

Мета данные- 
Код на C# Очень похож на C++ и на Java

Goou - создали язык (убицу С++ ) - Не получилось

CLR - common language runtime - общеязыковая среда выполнения

C++ - Не может делать  Оконные Приложения.

VPF - 
WindowsForm - Осонное приложение.
dotNetFreimvorc - 
Adonet
Dotnetcor

C# Медленней с++ 
С# Это полу компилируемый и полу интерпретируемый язык.




*/

using System;

namespace ConsoleAppl